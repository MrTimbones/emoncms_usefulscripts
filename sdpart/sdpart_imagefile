#!/bin/bash
###################################################################
#  All Emoncms code is released under the GNU Affero General Public License.
#  See COPYRIGHT.txt and LICENSE.txt.
#  ---------------------------------------------------------------------
#  Emoncms - open source energy visualisation
#  Part of the OpenEnergyMonitor project: http://openenergymonitor.org
###################################################################
# This script's purpose is to prepare a SD Card after a emoncms imagefile
# has been written to a SD card.
# It will calculate and expand the /data partition to the preferred size,
# and then also expand the partition filesystem.
# The whole process takes about 20 minutes to complete, depending upon the
# size of the SD card, and its important that the script is not interupted.
# Upon completion, your Raspberry Pi will poweroff.
#
# Author:    Paul Reed
###################################################################
if [ $(id -u) -ne 0 ]; then
  printf "Script must be run as root. Try 'sudo ./sdpart'\n"
  exit 1
fi

data_dir="/var/opt/emoncms"

if [ -d "/home/pi" ]; then
  if [ -d "/home/pi/data" ]; then
    data_dir="/home/pi/data"
  elif [ -d "/var/opt/emoncms" ]; then
    data_dir="/var/opt/emoncms"
  else
    echo This does not appear to be an emoncms imagefile installation
    echo the script is aborting.
    exit 1
  fi
fi

echo "data_dir: $data_dir"

###################################################################
rpi-rw
echo
PART_END="$(($(blockdev --getsz /dev/mmcblk0)))"
DATA_START="$(parted /dev/mmcblk0 -ms unit s p | grep "^3" | cut -f2 -d: | sed 's/[^0-9]*//g')"
[ "$DATA_START" ] || exit 1
# Create smaller data partition for 4Gb cards
if [ $PART_END -lt 10485760 ]
then
# Creates a 300Mb data partition and 10Mb buffer
DATA_END="$(((PART_END)-20480))"
else
# Creates a 1Gb data partition and 50Mb buffer
DATA_END="$(((PART_END)-102400))"
fi
###################################################################
# Display current SD card data
echo ======================================================
echo
echo Current Disk Info:
fdisk -l /dev/mmcblk0
echo
echo ======================================================
echo
echo Proposed changes to be made:
echo " SD card total disk size = "$(python -c "print $PART_END * 512.0 / 1073741824")"Gb"
echo " Data Partition size     = "$(python -c "print ($DATA_END - $DATA_START + 1) * 512.0 / 1073741824")"Gb"
echo
read -r -p "Are you sure you want to proceed? [Y/n] " response
if [[ $response =~ ^([nN][oO]|[nN])$ ]]
then
exit 1
else

if [ -f /usr/bin/rpi-rw ]; then
  rpi-rw
fi
###################################################################
# Create a systemd unit file to extend filesystem after a reboot
cat <<\EOF > /lib/systemd/system/resize2fs_once.service &&
[Unit]
Description=Resize2fs_once Service

[Service]
Type=idle
ExecStart=/home/pi/resize2fs_once.sh
StandardOutput=null
TimeoutStartSec=infinity

[Install]
WantedBy=multi-user.target
Alias=resize2fs_once.service

EOF
###################################################################
# Enable the unit file so it runs after a reboot
systemctl enable resize2fs_once.service
#
# Fdisk will now make the changes..
printf "d\n3\nn\np\n3\n$DATA_START\n$DATA_END\np\nw\n" | fdisk /dev/mmcblk0
echo This error message can however be disregarded, because your system
echo is about to be rebooted, and the new partition table will then be
echo read by your operating system.
echo
###################################################################
echo Writing the resize2fs_once script
cat <<\EOF > /home/pi/resize2fs_once.sh &&
#!/bin/sh
    log_daemon_msg "Starting resize2fs_once script"
    umount /dev/mmcblk0p3
    e2fsck -yf /dev/mmcblk0p3
    resize2fs -f /dev/mmcblk0p3
    if [ -f /usr/bin/rpi-rw ]; then
      rpi-rw
    fi
    rm /lib/systemd/system/resize2fs_once.service
    systemctl disable resize2fs_once.service
    rm /home/pi/resize2fs_once.sh
    sed -i "s~^#\(.*$data_dir\)~\1~" /etc/fstab
    /bin/sync
    /sbin/shutdown -h now

EOF
###################################################################
# Make the resize2fs_once script executable
chmod +x /home/pi/resize2fs_once.sh
# Ensure that the /data partition is unmounted after a reboot
sed -i "s~^[^#]*$data_dir~#&~" /etc/fstab

echo
echo
echo ======================================================================
echo
echo So far, so good... in 20s your system will reboot
echo and resize the $data_dir filesystem to fill the resized partition.
echo **THIS OPERATION WILL TAKE UP TO 20 MINUTES**
echo When completed the Pi will poweroff and close down.
echo PLEASE DO NOT UNPLUG THE POWER FOR AT LEAST 30min
echo because it will likely result in an unusable filesystem.
echo
echo ======================================================================
sleep 20
/bin/sync
/sbin/reboot
fi
###################################################################
# END OF SCRIPT
###################################################################
